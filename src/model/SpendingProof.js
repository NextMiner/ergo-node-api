/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpendingProof model module.
 * @module model/SpendingProof
 * @version 4.0.14
 */
class SpendingProof {
    /**
     * Constructs a new <code>SpendingProof</code>.
     * Spending proof for transaction input
     * @alias module:model/SpendingProof
     * @param proofBytes {String} Base16-encoded spending proofs
     * @param extension {Object.<String, String>} Variables to be put into context
     */
    constructor(proofBytes, extension) { 
        
        SpendingProof.initialize(this, proofBytes, extension);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, proofBytes, extension) { 
        obj['proofBytes'] = proofBytes;
        obj['extension'] = extension;
    }

    /**
     * Constructs a <code>SpendingProof</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpendingProof} obj Optional instance to populate.
     * @return {module:model/SpendingProof} The populated <code>SpendingProof</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpendingProof();

            if (data.hasOwnProperty('proofBytes')) {
                obj['proofBytes'] = ApiClient.convertToType(data['proofBytes'], 'String');
            }
            if (data.hasOwnProperty('extension')) {
                obj['extension'] = ApiClient.convertToType(data['extension'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * Base16-encoded spending proofs
 * @member {String} proofBytes
 */
SpendingProof.prototype['proofBytes'] = undefined;

/**
 * Variables to be put into context
 * @member {Object.<String, String>} extension
 */
SpendingProof.prototype['extension'] = undefined;






export default SpendingProof;

