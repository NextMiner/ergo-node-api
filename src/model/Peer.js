/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Peer model module.
 * @module model/Peer
 * @version 4.0.14
 */
class Peer {
    /**
     * Constructs a new <code>Peer</code>.
     * @alias module:model/Peer
     * @param address {String} 
     */
    constructor(address) { 
        
        Peer.initialize(this, address);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address) { 
        obj['address'] = address;
    }

    /**
     * Constructs a <code>Peer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Peer} obj Optional instance to populate.
     * @return {module:model/Peer} The populated <code>Peer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Peer();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('lastSeen')) {
                obj['lastSeen'] = ApiClient.convertToType(data['lastSeen'], 'Number');
            }
            if (data.hasOwnProperty('connectionType')) {
                obj['connectionType'] = ApiClient.convertToType(data['connectionType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} address
 */
Peer.prototype['address'] = undefined;

/**
 * @member {String} name
 */
Peer.prototype['name'] = undefined;

/**
 * Basic timestamp definition
 * @member {Number} lastSeen
 */
Peer.prototype['lastSeen'] = undefined;

/**
 * @member {module:model/Peer.ConnectionTypeEnum} connectionType
 */
Peer.prototype['connectionType'] = undefined;





/**
 * Allowed values for the <code>connectionType</code> property.
 * @enum {String}
 * @readonly
 */
Peer['ConnectionTypeEnum'] = {

    /**
     * value: "Incoming"
     * @const
     */
    "Incoming": "Incoming",

    /**
     * value: "Outgoing"
     * @const
     */
    "Outgoing": "Outgoing"
};



export default Peer;

