/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestsHolder model module.
 * @module model/RequestsHolder
 * @version 4.0.14
 */
class RequestsHolder {
    /**
     * Constructs a new <code>RequestsHolder</code>.
     * Holds many transaction requests and transaction fee
     * @alias module:model/RequestsHolder
     * @param requests {Array.<module:model/AnyOfPaymentRequestAssetIssueRequest>} Sequence of transaction requests
     */
    constructor(requests) { 
        
        RequestsHolder.initialize(this, requests);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requests) { 
        obj['requests'] = requests;
    }

    /**
     * Constructs a <code>RequestsHolder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestsHolder} obj Optional instance to populate.
     * @return {module:model/RequestsHolder} The populated <code>RequestsHolder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestsHolder();

            if (data.hasOwnProperty('requests')) {
                obj['requests'] = ApiClient.convertToType(data['requests'], ['String']);
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('inputsRaw')) {
                obj['inputsRaw'] = ApiClient.convertToType(data['inputsRaw'], ['String']);
            }
            if (data.hasOwnProperty('dataInputsRaw')) {
                obj['dataInputsRaw'] = ApiClient.convertToType(data['dataInputsRaw'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Sequence of transaction requests
 * @member {Array.<String>} requests
 */
RequestsHolder.prototype['requests'] = undefined;

/**
 * Transaction fee
 * @member {Number} fee
 */
RequestsHolder.prototype['fee'] = undefined;

/**
 * List of inputs to be used in serialized form
 * @member {Array.<String>} inputsRaw
 */
RequestsHolder.prototype['inputsRaw'] = undefined;

/**
 * List of data inputs to be used in serialized form
 * @member {Array.<String>} dataInputsRaw
 */
RequestsHolder.prototype['dataInputsRaw'] = undefined;






export default RequestsHolder;

