/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ErgoNodeApi);
  }
}(this, function(expect, ErgoNodeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ErgoNodeApi.WalletApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WalletApi', function() {
    describe('addBox', function() {
      it('should call addBox successfully', function(done) {
        //uncomment below and update the code to test addBox
        //instance.addBox(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkSeed', function() {
      it('should call checkSeed successfully', function(done) {
        //uncomment below and update the code to test checkSeed
        //instance.checkSeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('extractHints', function() {
      it('should call extractHints successfully', function(done) {
        //uncomment below and update the code to test extractHints
        //instance.extractHints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateCommitments', function() {
      it('should call generateCommitments successfully', function(done) {
        //uncomment below and update the code to test generateCommitments
        //instance.generateCommitments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWalletStatus', function() {
      it('should call getWalletStatus successfully', function(done) {
        //uncomment below and update the code to test getWalletStatus
        //instance.getWalletStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAddresses', function() {
      it('should call walletAddresses successfully', function(done) {
        //uncomment below and update the code to test walletAddresses
        //instance.walletAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletBalances', function() {
      it('should call walletBalances successfully', function(done) {
        //uncomment below and update the code to test walletBalances
        //instance.walletBalances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletBalancesUnconfirmed', function() {
      it('should call walletBalancesUnconfirmed successfully', function(done) {
        //uncomment below and update the code to test walletBalancesUnconfirmed
        //instance.walletBalancesUnconfirmed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletBoxes', function() {
      it('should call walletBoxes successfully', function(done) {
        //uncomment below and update the code to test walletBoxes
        //instance.walletBoxes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletBoxesCollect', function() {
      it('should call walletBoxesCollect successfully', function(done) {
        //uncomment below and update the code to test walletBoxesCollect
        //instance.walletBoxesCollect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletDeriveKey', function() {
      it('should call walletDeriveKey successfully', function(done) {
        //uncomment below and update the code to test walletDeriveKey
        //instance.walletDeriveKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletDeriveNextKey', function() {
      it('should call walletDeriveNextKey successfully', function(done) {
        //uncomment below and update the code to test walletDeriveNextKey
        //instance.walletDeriveNextKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletGetTransaction', function() {
      it('should call walletGetTransaction successfully', function(done) {
        //uncomment below and update the code to test walletGetTransaction
        //instance.walletGetTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletInit', function() {
      it('should call walletInit successfully', function(done) {
        //uncomment below and update the code to test walletInit
        //instance.walletInit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletLock', function() {
      it('should call walletLock successfully', function(done) {
        //uncomment below and update the code to test walletLock
        //instance.walletLock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletPaymentTransactionGenerateAndSend', function() {
      it('should call walletPaymentTransactionGenerateAndSend successfully', function(done) {
        //uncomment below and update the code to test walletPaymentTransactionGenerateAndSend
        //instance.walletPaymentTransactionGenerateAndSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletRescan', function() {
      it('should call walletRescan successfully', function(done) {
        //uncomment below and update the code to test walletRescan
        //instance.walletRescan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletRestore', function() {
      it('should call walletRestore successfully', function(done) {
        //uncomment below and update the code to test walletRestore
        //instance.walletRestore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletTransactionGenerate', function() {
      it('should call walletTransactionGenerate successfully', function(done) {
        //uncomment below and update the code to test walletTransactionGenerate
        //instance.walletTransactionGenerate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletTransactionGenerateAndSend', function() {
      it('should call walletTransactionGenerateAndSend successfully', function(done) {
        //uncomment below and update the code to test walletTransactionGenerateAndSend
        //instance.walletTransactionGenerateAndSend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletTransactionSign', function() {
      it('should call walletTransactionSign successfully', function(done) {
        //uncomment below and update the code to test walletTransactionSign
        //instance.walletTransactionSign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletTransactions', function() {
      it('should call walletTransactions successfully', function(done) {
        //uncomment below and update the code to test walletTransactions
        //instance.walletTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletTransactionsByScanId', function() {
      it('should call walletTransactionsByScanId successfully', function(done) {
        //uncomment below and update the code to test walletTransactionsByScanId
        //instance.walletTransactionsByScanId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletUnlock', function() {
      it('should call walletUnlock successfully', function(done) {
        //uncomment below and update the code to test walletUnlock
        //instance.walletUnlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletUnsignedTransactionGenerate', function() {
      it('should call walletUnsignedTransactionGenerate successfully', function(done) {
        //uncomment below and update the code to test walletUnsignedTransactionGenerate
        //instance.walletUnsignedTransactionGenerate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletUnspentBoxes', function() {
      it('should call walletUnspentBoxes successfully', function(done) {
        //uncomment below and update the code to test walletUnspentBoxes
        //instance.walletUnspentBoxes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletUpdateChangeAddress', function() {
      it('should call walletUpdateChangeAddress successfully', function(done) {
        //uncomment below and update the code to test walletUpdateChangeAddress
        //instance.walletUpdateChangeAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
