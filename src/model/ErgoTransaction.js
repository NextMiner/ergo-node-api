/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErgoTransactionDataInput from './ErgoTransactionDataInput';
import ErgoTransactionInput from './ErgoTransactionInput';
import ErgoTransactionOutput from './ErgoTransactionOutput';

/**
 * The ErgoTransaction model module.
 * @module model/ErgoTransaction
 * @version 4.0.14
 */
class ErgoTransaction {
    /**
     * Constructs a new <code>ErgoTransaction</code>.
     * Ergo transaction
     * @alias module:model/ErgoTransaction
     * @param inputs {Array.<module:model/ErgoTransactionInput>} Inputs of the transaction
     * @param dataInputs {Array.<module:model/ErgoTransactionDataInput>} Data inputs of the transaction
     * @param outputs {Array.<module:model/ErgoTransactionOutput>} Outputs of the transaction
     */
    constructor(inputs, dataInputs, outputs) { 
        
        ErgoTransaction.initialize(this, inputs, dataInputs, outputs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputs, dataInputs, outputs) { 
        obj['inputs'] = inputs;
        obj['dataInputs'] = dataInputs;
        obj['outputs'] = outputs;
    }

    /**
     * Constructs a <code>ErgoTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErgoTransaction} obj Optional instance to populate.
     * @return {module:model/ErgoTransaction} The populated <code>ErgoTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErgoTransaction();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('inputs')) {
                obj['inputs'] = ApiClient.convertToType(data['inputs'], [ErgoTransactionInput]);
            }
            if (data.hasOwnProperty('dataInputs')) {
                obj['dataInputs'] = ApiClient.convertToType(data['dataInputs'], [ErgoTransactionDataInput]);
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], [ErgoTransactionOutput]);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Base16-encoded transaction id bytes
 * @member {String} id
 */
ErgoTransaction.prototype['id'] = undefined;

/**
 * Inputs of the transaction
 * @member {Array.<module:model/ErgoTransactionInput>} inputs
 */
ErgoTransaction.prototype['inputs'] = undefined;

/**
 * Data inputs of the transaction
 * @member {Array.<module:model/ErgoTransactionDataInput>} dataInputs
 */
ErgoTransaction.prototype['dataInputs'] = undefined;

/**
 * Outputs of the transaction
 * @member {Array.<module:model/ErgoTransactionOutput>} outputs
 */
ErgoTransaction.prototype['outputs'] = undefined;

/**
 * Size in bytes
 * @member {Number} size
 */
ErgoTransaction.prototype['size'] = undefined;






export default ErgoTransaction;

