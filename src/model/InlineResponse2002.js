/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2002 model module.
 * @module model/InlineResponse2002
 * @version 4.0.14
 */
class InlineResponse2002 {
    /**
     * Constructs a new <code>InlineResponse2002</code>.
     * @alias module:model/InlineResponse2002
     * @param isInitialized {Boolean} true if wallet is initialized, false otherwise
     * @param isUnlocked {Boolean} true if wallet is unlocked, false otherwise
     * @param changeAddress {String} address to send change to. Empty when wallet is not initialized or locked. By default change address correponds to root key address, could be set via /wallet/updateChangeAddress method.
     * @param walletHeight {Number} last scanned height for the wallet (and external scans)
     * @param error {String} last wallet error caught
     */
    constructor(isInitialized, isUnlocked, changeAddress, walletHeight, error) { 
        
        InlineResponse2002.initialize(this, isInitialized, isUnlocked, changeAddress, walletHeight, error);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isInitialized, isUnlocked, changeAddress, walletHeight, error) { 
        obj['isInitialized'] = isInitialized;
        obj['isUnlocked'] = isUnlocked;
        obj['changeAddress'] = changeAddress;
        obj['walletHeight'] = walletHeight;
        obj['error'] = error;
    }

    /**
     * Constructs a <code>InlineResponse2002</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2002} obj Optional instance to populate.
     * @return {module:model/InlineResponse2002} The populated <code>InlineResponse2002</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2002();

            if (data.hasOwnProperty('isInitialized')) {
                obj['isInitialized'] = ApiClient.convertToType(data['isInitialized'], 'Boolean');
            }
            if (data.hasOwnProperty('isUnlocked')) {
                obj['isUnlocked'] = ApiClient.convertToType(data['isUnlocked'], 'Boolean');
            }
            if (data.hasOwnProperty('changeAddress')) {
                obj['changeAddress'] = ApiClient.convertToType(data['changeAddress'], 'String');
            }
            if (data.hasOwnProperty('walletHeight')) {
                obj['walletHeight'] = ApiClient.convertToType(data['walletHeight'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
        }
        return obj;
    }


}

/**
 * true if wallet is initialized, false otherwise
 * @member {Boolean} isInitialized
 */
InlineResponse2002.prototype['isInitialized'] = undefined;

/**
 * true if wallet is unlocked, false otherwise
 * @member {Boolean} isUnlocked
 */
InlineResponse2002.prototype['isUnlocked'] = undefined;

/**
 * address to send change to. Empty when wallet is not initialized or locked. By default change address correponds to root key address, could be set via /wallet/updateChangeAddress method.
 * @member {String} changeAddress
 */
InlineResponse2002.prototype['changeAddress'] = undefined;

/**
 * last scanned height for the wallet (and external scans)
 * @member {Number} walletHeight
 */
InlineResponse2002.prototype['walletHeight'] = undefined;

/**
 * last wallet error caught
 * @member {String} error
 */
InlineResponse2002.prototype['error'] = undefined;






export default InlineResponse2002;

