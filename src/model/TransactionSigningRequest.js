/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionHintsBag from './TransactionHintsBag';
import TransactionSigningRequestSecrets from './TransactionSigningRequestSecrets';
import UnsignedErgoTransaction from './UnsignedErgoTransaction';

/**
 * The TransactionSigningRequest model module.
 * @module model/TransactionSigningRequest
 * @version 4.0.14
 */
class TransactionSigningRequest {
    /**
     * Constructs a new <code>TransactionSigningRequest</code>.
     * A request to sign a transaction with secrets provided
     * @alias module:model/TransactionSigningRequest
     * @param tx {module:model/UnsignedErgoTransaction} 
     * @param secrets {module:model/TransactionSigningRequestSecrets} 
     */
    constructor(tx, secrets) { 
        
        TransactionSigningRequest.initialize(this, tx, secrets);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tx, secrets) { 
        obj['tx'] = tx;
        obj['secrets'] = secrets;
    }

    /**
     * Constructs a <code>TransactionSigningRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionSigningRequest} obj Optional instance to populate.
     * @return {module:model/TransactionSigningRequest} The populated <code>TransactionSigningRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionSigningRequest();

            if (data.hasOwnProperty('tx')) {
                obj['tx'] = UnsignedErgoTransaction.constructFromObject(data['tx']);
            }
            if (data.hasOwnProperty('inputsRaw')) {
                obj['inputsRaw'] = ApiClient.convertToType(data['inputsRaw'], ['String']);
            }
            if (data.hasOwnProperty('dataInputsRaw')) {
                obj['dataInputsRaw'] = ApiClient.convertToType(data['dataInputsRaw'], ['String']);
            }
            if (data.hasOwnProperty('hints')) {
                obj['hints'] = TransactionHintsBag.constructFromObject(data['hints']);
            }
            if (data.hasOwnProperty('secrets')) {
                obj['secrets'] = TransactionSigningRequestSecrets.constructFromObject(data['secrets']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/UnsignedErgoTransaction} tx
 */
TransactionSigningRequest.prototype['tx'] = undefined;

/**
 * Optional list of inputs to be used in serialized form
 * @member {Array.<String>} inputsRaw
 */
TransactionSigningRequest.prototype['inputsRaw'] = undefined;

/**
 * Optional list of inputs to be used in serialized form
 * @member {Array.<String>} dataInputsRaw
 */
TransactionSigningRequest.prototype['dataInputsRaw'] = undefined;

/**
 * @member {module:model/TransactionHintsBag} hints
 */
TransactionSigningRequest.prototype['hints'] = undefined;

/**
 * @member {module:model/TransactionSigningRequestSecrets} secrets
 */
TransactionSigningRequest.prototype['secrets'] = undefined;






export default TransactionSigningRequest;

