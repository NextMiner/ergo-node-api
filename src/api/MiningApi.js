/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../model/ApiError';
import ErgoTransaction from '../model/ErgoTransaction';
import InlineResponse2005 from '../model/InlineResponse2005';
import InlineResponse2006 from '../model/InlineResponse2006';
import PowSolutions from '../model/PowSolutions';
import WorkMessage from '../model/WorkMessage';

/**
* Mining service.
* @module api/MiningApi
* @version 4.0.14
*/
export default class MiningApi {

    /**
    * Constructs a new MiningApi. 
    * @alias module:api/MiningApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the miningReadMinerRewardAddress operation.
     * @callback module:api/MiningApi~miningReadMinerRewardAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2005} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read miner reward address
     * @param {module:api/MiningApi~miningReadMinerRewardAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2005}
     */
    miningReadMinerRewardAddress(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2005;
      return this.apiClient.callApi(
        '/mining/rewardAddress', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the miningReadMinerRewardPubkey operation.
     * @callback module:api/MiningApi~miningReadMinerRewardPubkeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2006} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read public key associated with miner rewards
     * @param {module:api/MiningApi~miningReadMinerRewardPubkeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2006}
     */
    miningReadMinerRewardPubkey(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2006;
      return this.apiClient.callApi(
        '/mining/rewardPublicKey', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the miningRequestBlockCandidate operation.
     * @callback module:api/MiningApi~miningRequestBlockCandidateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request block candidate
     * @param {module:api/MiningApi~miningRequestBlockCandidateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkMessage}
     */
    miningRequestBlockCandidate(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkMessage;
      return this.apiClient.callApi(
        '/mining/candidate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the miningRequestBlockCandidateWithMandatoryTransactions operation.
     * @callback module:api/MiningApi~miningRequestBlockCandidateWithMandatoryTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request block candidate
     * @param {Array.<module:model/ErgoTransaction>} ergoTransaction 
     * @param {module:api/MiningApi~miningRequestBlockCandidateWithMandatoryTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkMessage}
     */
    miningRequestBlockCandidateWithMandatoryTransactions(ergoTransaction, callback) {
      let postBody = ergoTransaction;
      // verify the required parameter 'ergoTransaction' is set
      if (ergoTransaction === undefined || ergoTransaction === null) {
        throw new Error("Missing the required parameter 'ergoTransaction' when calling miningRequestBlockCandidateWithMandatoryTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkMessage;
      return this.apiClient.callApi(
        '/mining/candidateWithTxs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the miningSubmitSolution operation.
     * @callback module:api/MiningApi~miningSubmitSolutionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit solution for current candidate
     * @param {module:model/PowSolutions} powSolutions 
     * @param {module:api/MiningApi~miningSubmitSolutionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    miningSubmitSolution(powSolutions, callback) {
      let postBody = powSolutions;
      // verify the required parameter 'powSolutions' is set
      if (powSolutions === undefined || powSolutions === null) {
        throw new Error("Missing the required parameter 'powSolutions' when calling miningSubmitSolution");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/mining/solution', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
