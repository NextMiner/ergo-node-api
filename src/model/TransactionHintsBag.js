/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionHintsBag model module.
 * @module model/TransactionHintsBag
 * @version 4.0.14
 */
class TransactionHintsBag {
    /**
     * Constructs a new <code>TransactionHintsBag</code>.
     * prover hints extracted from a transaction
     * @alias module:model/TransactionHintsBag
     */
    constructor() { 
        
        TransactionHintsBag.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionHintsBag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionHintsBag} obj Optional instance to populate.
     * @return {module:model/TransactionHintsBag} The populated <code>TransactionHintsBag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionHintsBag();

            if (data.hasOwnProperty('secretHints')) {
                obj['secretHints'] = ApiClient.convertToType(data['secretHints'], [Object]);
            }
            if (data.hasOwnProperty('publicHints')) {
                obj['publicHints'] = ApiClient.convertToType(data['publicHints'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * Hints which contain secrets, do not share them!
 * @member {Array.<Object.<String, Array.<String>>>>} secretHints
 */
TransactionHintsBag.prototype['secretHints'] = undefined;

/**
 * Hints which contain public data only, share them freely!
 * @member {Array.<Object.<String, Array.<String>>>>} publicHints
 */
TransactionHintsBag.prototype['publicHints'] = undefined;






export default TransactionHintsBag;

