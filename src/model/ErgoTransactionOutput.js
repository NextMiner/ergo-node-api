/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Asset from './Asset';

/**
 * The ErgoTransactionOutput model module.
 * @module model/ErgoTransactionOutput
 * @version 4.0.14
 */
class ErgoTransactionOutput {
    /**
     * Constructs a new <code>ErgoTransactionOutput</code>.
     * @alias module:model/ErgoTransactionOutput
     * @param value {Number} Amount of Ergo token
     * @param ergoTree {String} Base16-encoded ergo tree bytes
     * @param creationHeight {Number} Height the output was created at
     * @param additionalRegisters {Object.<String, String>} Ergo box registers
     */
    constructor(value, ergoTree, creationHeight, additionalRegisters) { 
        
        ErgoTransactionOutput.initialize(this, value, ergoTree, creationHeight, additionalRegisters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value, ergoTree, creationHeight, additionalRegisters) { 
        obj['value'] = value;
        obj['ergoTree'] = ergoTree;
        obj['creationHeight'] = creationHeight;
        obj['additionalRegisters'] = additionalRegisters;
    }

    /**
     * Constructs a <code>ErgoTransactionOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErgoTransactionOutput} obj Optional instance to populate.
     * @return {module:model/ErgoTransactionOutput} The populated <code>ErgoTransactionOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErgoTransactionOutput();

            if (data.hasOwnProperty('boxId')) {
                obj['boxId'] = ApiClient.convertToType(data['boxId'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('ergoTree')) {
                obj['ergoTree'] = ApiClient.convertToType(data['ergoTree'], 'String');
            }
            if (data.hasOwnProperty('creationHeight')) {
                obj['creationHeight'] = ApiClient.convertToType(data['creationHeight'], 'Number');
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], [Asset]);
            }
            if (data.hasOwnProperty('additionalRegisters')) {
                obj['additionalRegisters'] = ApiClient.convertToType(data['additionalRegisters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Base16-encoded transaction box id bytes. Should be 32 bytes long
 * @member {String} boxId
 */
ErgoTransactionOutput.prototype['boxId'] = undefined;

/**
 * Amount of Ergo token
 * @member {Number} value
 */
ErgoTransactionOutput.prototype['value'] = undefined;

/**
 * Base16-encoded ergo tree bytes
 * @member {String} ergoTree
 */
ErgoTransactionOutput.prototype['ergoTree'] = undefined;

/**
 * Height the output was created at
 * @member {Number} creationHeight
 */
ErgoTransactionOutput.prototype['creationHeight'] = undefined;

/**
 * Assets list in the transaction
 * @member {Array.<module:model/Asset>} assets
 */
ErgoTransactionOutput.prototype['assets'] = undefined;

/**
 * Ergo box registers
 * @member {Object.<String, String>} additionalRegisters
 */
ErgoTransactionOutput.prototype['additionalRegisters'] = undefined;

/**
 * Base16-encoded transaction id bytes
 * @member {String} transactionId
 */
ErgoTransactionOutput.prototype['transactionId'] = undefined;

/**
 * Index in the transaction outputs
 * @member {Number} index
 */
ErgoTransactionOutput.prototype['index'] = undefined;






export default ErgoTransactionOutput;

