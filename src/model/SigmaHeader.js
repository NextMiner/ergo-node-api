/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvlTreeData from './AvlTreeData';
import PowSolutions from './PowSolutions';

/**
 * The SigmaHeader model module.
 * @module model/SigmaHeader
 * @version 4.0.14
 */
class SigmaHeader {
    /**
     * Constructs a new <code>SigmaHeader</code>.
     * Block header format used for sigma ErgoLikeContext
     * @alias module:model/SigmaHeader
     * @param timestamp {Number} Basic timestamp definition
     * @param version {Number} Ergo blockchain protocol version
     * @param adProofsRoot {String} Base16-encoded 32 byte digest
     * @param stateRoot {module:model/AvlTreeData} 
     * @param transactionsRoot {String} Base16-encoded 32 byte digest
     * @param nBits {Number} 
     * @param extensionHash {String} Base16-encoded 32 byte digest
     * @param height {Number} 
     * @param parentId {String} Base16-encoded 32 byte modifier id
     * @param votes {String} Base16-encoded votes for a soft-fork and parameters
     */
    constructor(timestamp, version, adProofsRoot, stateRoot, transactionsRoot, nBits, extensionHash, height, parentId, votes) { 
        
        SigmaHeader.initialize(this, timestamp, version, adProofsRoot, stateRoot, transactionsRoot, nBits, extensionHash, height, parentId, votes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, version, adProofsRoot, stateRoot, transactionsRoot, nBits, extensionHash, height, parentId, votes) { 
        obj['timestamp'] = timestamp;
        obj['version'] = version;
        obj['adProofsRoot'] = adProofsRoot;
        obj['stateRoot'] = stateRoot;
        obj['transactionsRoot'] = transactionsRoot;
        obj['nBits'] = nBits;
        obj['extensionHash'] = extensionHash;
        obj['height'] = height;
        obj['parentId'] = parentId;
        obj['votes'] = votes;
    }

    /**
     * Constructs a <code>SigmaHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SigmaHeader} obj Optional instance to populate.
     * @return {module:model/SigmaHeader} The populated <code>SigmaHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SigmaHeader();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('adProofsRoot')) {
                obj['adProofsRoot'] = ApiClient.convertToType(data['adProofsRoot'], 'String');
            }
            if (data.hasOwnProperty('adProofsId')) {
                obj['adProofsId'] = ApiClient.convertToType(data['adProofsId'], 'String');
            }
            if (data.hasOwnProperty('stateRoot')) {
                obj['stateRoot'] = AvlTreeData.constructFromObject(data['stateRoot']);
            }
            if (data.hasOwnProperty('transactionsRoot')) {
                obj['transactionsRoot'] = ApiClient.convertToType(data['transactionsRoot'], 'String');
            }
            if (data.hasOwnProperty('transactionsId')) {
                obj['transactionsId'] = ApiClient.convertToType(data['transactionsId'], 'String');
            }
            if (data.hasOwnProperty('nBits')) {
                obj['nBits'] = ApiClient.convertToType(data['nBits'], 'Number');
            }
            if (data.hasOwnProperty('extensionHash')) {
                obj['extensionHash'] = ApiClient.convertToType(data['extensionHash'], 'String');
            }
            if (data.hasOwnProperty('extensionRoot')) {
                obj['extensionRoot'] = ApiClient.convertToType(data['extensionRoot'], 'String');
            }
            if (data.hasOwnProperty('extensionId')) {
                obj['extensionId'] = ApiClient.convertToType(data['extensionId'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'String');
            }
            if (data.hasOwnProperty('powSolutions')) {
                obj['powSolutions'] = PowSolutions.constructFromObject(data['powSolutions']);
            }
            if (data.hasOwnProperty('votes')) {
                obj['votes'] = ApiClient.convertToType(data['votes'], 'String');
            }
            if (data.hasOwnProperty('minerPk')) {
                obj['minerPk'] = ApiClient.convertToType(data['minerPk'], 'String');
            }
            if (data.hasOwnProperty('powOnetimePk')) {
                obj['powOnetimePk'] = ApiClient.convertToType(data['powOnetimePk'], 'String');
            }
            if (data.hasOwnProperty('powNonce')) {
                obj['powNonce'] = ApiClient.convertToType(data['powNonce'], 'String');
            }
            if (data.hasOwnProperty('powDistance')) {
                obj['powDistance'] = ApiClient.convertToType(data['powDistance'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Base16-encoded 32 byte modifier id
 * @member {String} id
 */
SigmaHeader.prototype['id'] = undefined;

/**
 * Basic timestamp definition
 * @member {Number} timestamp
 */
SigmaHeader.prototype['timestamp'] = undefined;

/**
 * Ergo blockchain protocol version
 * @member {Number} version
 */
SigmaHeader.prototype['version'] = undefined;

/**
 * Base16-encoded 32 byte digest
 * @member {String} adProofsRoot
 */
SigmaHeader.prototype['adProofsRoot'] = undefined;

/**
 * Base16-encoded 32 byte modifier id
 * @member {String} adProofsId
 */
SigmaHeader.prototype['adProofsId'] = undefined;

/**
 * @member {module:model/AvlTreeData} stateRoot
 */
SigmaHeader.prototype['stateRoot'] = undefined;

/**
 * Base16-encoded 32 byte digest
 * @member {String} transactionsRoot
 */
SigmaHeader.prototype['transactionsRoot'] = undefined;

/**
 * Base16-encoded 32 byte modifier id
 * @member {String} transactionsId
 */
SigmaHeader.prototype['transactionsId'] = undefined;

/**
 * @member {Number} nBits
 */
SigmaHeader.prototype['nBits'] = undefined;

/**
 * Base16-encoded 32 byte digest
 * @member {String} extensionHash
 */
SigmaHeader.prototype['extensionHash'] = undefined;

/**
 * Base16-encoded 32 byte digest
 * @member {String} extensionRoot
 */
SigmaHeader.prototype['extensionRoot'] = undefined;

/**
 * Base16-encoded 32 byte modifier id
 * @member {String} extensionId
 */
SigmaHeader.prototype['extensionId'] = undefined;

/**
 * @member {Number} height
 */
SigmaHeader.prototype['height'] = undefined;

/**
 * @member {Number} size
 */
SigmaHeader.prototype['size'] = undefined;

/**
 * Base16-encoded 32 byte modifier id
 * @member {String} parentId
 */
SigmaHeader.prototype['parentId'] = undefined;

/**
 * @member {module:model/PowSolutions} powSolutions
 */
SigmaHeader.prototype['powSolutions'] = undefined;

/**
 * Base16-encoded votes for a soft-fork and parameters
 * @member {String} votes
 */
SigmaHeader.prototype['votes'] = undefined;

/**
 * @member {String} minerPk
 */
SigmaHeader.prototype['minerPk'] = undefined;

/**
 * @member {String} powOnetimePk
 */
SigmaHeader.prototype['powOnetimePk'] = undefined;

/**
 * Base16-encoded 32 byte digest
 * @member {String} powNonce
 */
SigmaHeader.prototype['powNonce'] = undefined;

/**
 * sigma.BigInt
 * @member {Number} powDistance
 */
SigmaHeader.prototype['powDistance'] = undefined;






export default SigmaHeader;

