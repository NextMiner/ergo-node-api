/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ErgoNodeApi);
  }
}(this, function(expect, ErgoNodeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ErgoNodeApi.MiningApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MiningApi', function() {
    describe('miningReadMinerRewardAddress', function() {
      it('should call miningReadMinerRewardAddress successfully', function(done) {
        //uncomment below and update the code to test miningReadMinerRewardAddress
        //instance.miningReadMinerRewardAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('miningReadMinerRewardPubkey', function() {
      it('should call miningReadMinerRewardPubkey successfully', function(done) {
        //uncomment below and update the code to test miningReadMinerRewardPubkey
        //instance.miningReadMinerRewardPubkey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('miningRequestBlockCandidate', function() {
      it('should call miningRequestBlockCandidate successfully', function(done) {
        //uncomment below and update the code to test miningRequestBlockCandidate
        //instance.miningRequestBlockCandidate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('miningRequestBlockCandidateWithMandatoryTransactions', function() {
      it('should call miningRequestBlockCandidateWithMandatoryTransactions successfully', function(done) {
        //uncomment below and update the code to test miningRequestBlockCandidateWithMandatoryTransactions
        //instance.miningRequestBlockCandidateWithMandatoryTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('miningSubmitSolution', function() {
      it('should call miningSubmitSolution successfully', function(done) {
        //uncomment below and update the code to test miningSubmitSolution
        //instance.miningSubmitSolution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
