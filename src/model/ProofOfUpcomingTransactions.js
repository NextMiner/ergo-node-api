/**
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * The version of the OpenAPI document: 4.0.14
 * Contact: ergoplatform@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MerkleProof from './MerkleProof';

/**
 * The ProofOfUpcomingTransactions model module.
 * @module model/ProofOfUpcomingTransactions
 * @version 4.0.14
 */
class ProofOfUpcomingTransactions {
    /**
     * Constructs a new <code>ProofOfUpcomingTransactions</code>.
     * Proof that a block corresponding to given header without PoW contains some transactions
     * @alias module:model/ProofOfUpcomingTransactions
     * @param msgPreimage {String} Base16-encoded serialized header without Proof-of-Work
     * @param txProofs {Array.<module:model/MerkleProof>} Merkle proofs of transactions included into blocks (not necessarily all the block transactions)
     */
    constructor(msgPreimage, txProofs) { 
        
        ProofOfUpcomingTransactions.initialize(this, msgPreimage, txProofs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, msgPreimage, txProofs) { 
        obj['msgPreimage'] = msgPreimage;
        obj['txProofs'] = txProofs;
    }

    /**
     * Constructs a <code>ProofOfUpcomingTransactions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProofOfUpcomingTransactions} obj Optional instance to populate.
     * @return {module:model/ProofOfUpcomingTransactions} The populated <code>ProofOfUpcomingTransactions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProofOfUpcomingTransactions();

            if (data.hasOwnProperty('msgPreimage')) {
                obj['msgPreimage'] = ApiClient.convertToType(data['msgPreimage'], 'String');
            }
            if (data.hasOwnProperty('txProofs')) {
                obj['txProofs'] = ApiClient.convertToType(data['txProofs'], [MerkleProof]);
            }
        }
        return obj;
    }


}

/**
 * Base16-encoded serialized header without Proof-of-Work
 * @member {String} msgPreimage
 */
ProofOfUpcomingTransactions.prototype['msgPreimage'] = undefined;

/**
 * Merkle proofs of transactions included into blocks (not necessarily all the block transactions)
 * @member {Array.<module:model/MerkleProof>} txProofs
 */
ProofOfUpcomingTransactions.prototype['txProofs'] = undefined;






export default ProofOfUpcomingTransactions;

